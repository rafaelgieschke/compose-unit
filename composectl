#!/bin/sh
set -eu

DOCKER_COMPOSE="docker-compose"

CMD="${1:-list-units}"

case "$CMD" in
  "-"*)
    CMD="list-units";;
  *)
    if test "$#" -ge 1; then
      shift
    fi;;
esac

DIR=""
i="0"
ii="$#"
while test "$i" -lt "$ii"; do
  OPT="$1"
  shift
  case "$OPT" in
    "--")
      if test -z "$DIR"; then
        i="$((i+1))"
        OPT="$1"
        shift
        DIR="$OPT"
      else
        set -- "$@" "$OPT"
      fi;;
    "-"*)
      set -- "$@" "$OPT";;
    *)
      if test -z "$DIR"; then
        DIR="$OPT"
      else
        set -- "$@" "$OPT"
      fi;;
  esac
  i="$((i+1))"
done

if test -z "$DIR" && test "$CMD" != "list-units"; then
  DIR="."
fi

if test "$DIR" && test "$DIR" != "*"; then
  DIR="$(readlink -f -- "$DIR")"
  if ! test -d "$DIR" || ! (test -f "$DIR/*compose.yaml" || test -f "$DIR/*compose.yml"); then
    printf 'Error: Directory "%s" does not contain a compose file\n' "$DIR" >&2
    exit 1
  fi
  INSTANCE="$(systemd-escape -p "$DIR")"
else
  INSTANCE="*"
fi

for cmd in config exec images ps top; do
  if test "$CMD" = "$cmd"; then
    set -- "$CMD" "$@"
    CMD="docker"
  fi
done

if test "$CMD" = "journal"; then
  CMD="journalctl"
fi

if test "$CMD" = "docker"; then
  cd "$DIR"
  set -x
  COMPOSE_PROJECT_NAME="$(printf %s "$INSTANCE" | tr A-Z a-z | tr -c a-z0-9- _)" exec "$DOCKER_COMPOSE" "$@"
elif test "$CMD" = "journalctl"; then
  set -x
  exec journalctl -u compose@"$INSTANCE" "$@"
else
  set -x
  exec systemctl "$CMD" compose@"$INSTANCE" "$@"
fi
